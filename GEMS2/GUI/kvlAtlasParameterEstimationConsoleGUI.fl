# data file for the Fltk User Interface Designer (fluid)
version 1.0110 
header_name {.h} 
code_name {.cxx}
class kvlAtlasParameterEstimationConsoleGUI {open
} {
  Function {kvlAtlasParameterEstimationConsoleGUI()} {open
  } {
    Fl_Window m_Window {
      callback {exit( 0 );} open selected
      xywh {184 36 1670 1005} type Double visible
    } {
      Fl_Group m_LabelImageViewer {
        label {Label image}
        callback {//this->SelectTriangleContainingPoint( Fl::event_x(), m_LabelImageViewer->h() - Fl::event_y() );} open
        xywh {25 29 700 700} box FLAT_BOX color 0
        code0 {\#include "kvlImageViewer.h"}
        class {kvl::ImageViewer}
      } {}
      Fl_Group m_AlphaImageViewer {
        label Alphas
        callback {//this->SelectTriangleContainingPoint( Fl::event_x(), m_AlphaImageViewer->h() - Fl::event_y() );} open
        xywh {855 29 700 700} box FLAT_BOX color 0
        class {kvl::ImageViewer}
      } {}
      Fl_Choice m_LabelImageNumber {
        label {Label image number:}
        callback {this->DisplayLabelImage( m_LabelImageNumber->value() );} open
        xywh {173 751 110 25} down_box BORDER_BOX
      } {}
      Fl_Value_Input m_Size0 {
        label {Initial mesh size:}
        callback {this->InitializeMesh();
m_NumberOfUpsamplingSteps->do_callback();
//m_LabelImageNumber->do_callback();}
        xywh {160 797 60 25} when 4 minimum 1 maximum 100 step 1 value 10
      }
      Fl_Value_Input m_Size1 {
        callback {this->InitializeMesh();
m_NumberOfUpsamplingSteps->do_callback();
//m_LabelImageNumber->do_callback();}
        xywh {233 797 60 25} when 4 minimum 1 maximum 100 step 1 value 10
      }
      Fl_Button {} {
        label {Go!}
        callback {this->Estimate();}
        xywh {1080 815 105 25}
      }
      Fl_Check_Button m_ShowMesh {
        label {Show mesh:}
        callback {m_LabelImageNumber->do_callback();}
        xywh {840 835 25 25} down_box DOWN_BOX value 1 align 4
      }
      Fl_Check_Button m_ShowAlphasEstimationIterations {
        label {Show alphas estimation iterations:}
        xywh {960 880 25 25} down_box DOWN_BOX value 1 align 4
      }
      Fl_Progress m_TotalProgress {
        label Inactive
        xywh {1235 815 255 25}
      }
      Fl_Progress m_SubProgress {
        xywh {1235 860 255 25}
      }
      Fl_Choice m_LabelNumber {
        label {Label:}
        callback {m_LabelImageNumber->do_callback();} open
        xywh {433 749 322 26} down_box BORDER_BOX
      } {}
      Fl_Value_Input m_InitialStiffness {
        label {Initial stiffness:}
        callback {this->InitializeMesh();
//m_LabelImageNumber->do_callback();}
        xywh {203 950 75 25} when 4 maximum 1000 value 0.1
      }
      Fl_Check_Button m_ShowGradient {
        label {Show gradient:}
        callback {m_LabelImageNumber->do_callback();}
        xywh {980 835 25 25} down_box DOWN_BOX align 4
      }
      Fl_Button {} {
        label Interrupt
        callback {this->Interrupt();}
        xywh {1080 850 105 25}
      }
      Fl_Button {} {
        label Step
        callback {this->Step();}
        xywh {1080 885 105 25}
      }
      Fl_Button {} {
        label Continue
        callback {this->Continue();}
        xywh {1080 920 105 25}
      }
      Fl_Value_Input m_PositionEstimationResolution {
        label {Position estimation resolution}
        callback {this->SetPositionEstimationResolution( static_cast< unsigned int >( m_PositionEstimationResolution->value() ) );}
        xywh {945 920 60 25} when 4 minimum 1 maximum 100 step 1 value 10
      }
      Fl_Value_Input m_NumberOfUpsamplingSteps {
        label {Number of upsampling steps:}
        callback {const int size0 = static_cast< int >( m_Size0->value() );
const int size1 = static_cast< int >( m_Size1->value() );
const int size2 = static_cast< int >( m_Size2->value() );
const int numberOfUpsamplingSteps = 
   static_cast< int >( m_NumberOfUpsamplingSteps->value() );
const float finalSize0 = 
        pow( 2, numberOfUpsamplingSteps ) * size0 - 
        pow( 2, numberOfUpsamplingSteps ) + 1;
const float finalSize1 = 
        pow( 2, numberOfUpsamplingSteps ) * size1 - 
        pow( 2, numberOfUpsamplingSteps ) + 1;
const float finalSize2 = 
        pow( 2, numberOfUpsamplingSteps ) * size2 - 
        pow( 2, numberOfUpsamplingSteps ) + 1;
m_FinalSize0->value( finalSize0 );
m_FinalSize1->value( finalSize1 );
m_FinalSize2->value( finalSize2 );}
        xywh {233 836 60 25} when 4 maximum 10 step 1
      }
      Fl_Value_Output m_FinalSize0 {
        label {Final inital mesh size:}
        xywh {161 875 60 25}
      }
      Fl_Value_Output m_FinalSize1 {
        xywh {233 875 60 25}
      }
      Fl_Input m_ExplicitStartCollection {
        label {Explicit start collection:}
        callback {this->InitializeMesh();
m_LabelImageNumber->do_callback();}
        xywh {825 764 235 25} align 1 deactivate
      }
      Fl_Check_Button m_UseExplicitStartCollection {
        callback {if ( m_UseExplicitStartCollection->value() )
  {
  m_ExplicitStartCollection->activate();
  }
else
  {
  m_ExplicitStartCollection->deactivate();
  }}
        xywh {795 764 25 25} down_box DOWN_BOX align 4
      }
      Fl_Value_Input m_Size2 {
        callback {this->InitializeMesh();
m_NumberOfUpsamplingSteps->do_callback();
//m_LabelImageNumber->do_callback();}
        xywh {303 797 60 25} when 4 minimum 1 maximum 100 step 1 value 10
      }
      Fl_Value_Output m_FinalSize2 {
        xywh {303 875 60 25}
      }
      Fl_Group {} {
        label {Position Optimizer} open
        xywh {430 830 245 105} box DOWN_BOX
      } {
        Fl_Round_Button m_FixedStepGradientDescent {
          label {Fixed-Step Gradient Descent}
          xywh {445 840 25 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_GradientDescent {
          label {Gradient Descent}
          xywh {445 864 25 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_ConjugateGradient {
          label {Conjugate Gradient}
          xywh {445 888 25 25} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_LBFGS {
          label {L-BFGS}
          xywh {445 909 25 25} type Radio down_box ROUND_DOWN_BOX
        }
      }
    }
  }
  Function {~kvlAtlasParameterEstimationConsoleGUI()} {open return_type virtual
  } {}
  Function {DisplayLabelImage( unsigned int labelImageNumber )} {open return_type {virtual void}
  } {}
  Function {InitializeMesh()} {open return_type {virtual void}
  } {}
  Function {Estimate()} {open return_type {virtual void}
  } {}
  Function {SelectTriangleContainingPoint( float, float )} {open return_type {virtual void}
  } {}
  Function {Interrupt()} {open return_type {virtual void}
  } {}
  Function {Step()} {open return_type {virtual void}
  } {}
  Function {Continue()} {open return_type {virtual void}
  } {}
  Function {SetPositionEstimationResolution( unsigned int )} {open return_type {virtual void}
  } {}
} 
